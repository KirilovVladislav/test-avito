[{"/Users/vladislavkirilov/Портфолио/tests/test-avito/src/index.js":"1","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/App.js":"2","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/api.js":"3","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/slice/appSlice.js":"4","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/store.js":"5","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/slice/newsSlice.js":"6","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/pages/NewsPage.jsx":"7","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/pages/HomePage.jsx":"8","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/utils/mapTime.js":"9","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/NewsItem/NewsItem.jsx":"10","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/Time/Time.jsx":"11","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/NewsInfo/NewsInfo.jsx":"12","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/Comments/Comments.jsx":"13","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/Comment/Comment.jsx":"14","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/ButtonUpdate/ButtonUpdate.jsx":"15","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/hocs/withUpdate.jsx":"16","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/Overlay/Overlay.jsx":"17"},{"size":494,"mtime":1607062915712,"results":"18","hashOfConfig":"19"},{"size":507,"mtime":1607055701032,"results":"20","hashOfConfig":"19"},{"size":535,"mtime":1606830274350,"results":"21","hashOfConfig":"19"},{"size":475,"mtime":1606423909621,"results":"22","hashOfConfig":"19"},{"size":540,"mtime":1606512831235,"results":"23","hashOfConfig":"19"},{"size":1368,"mtime":1606857962150,"results":"24","hashOfConfig":"19"},{"size":1608,"mtime":1607061811998,"results":"25","hashOfConfig":"19"},{"size":1777,"mtime":1607069471104,"results":"26","hashOfConfig":"19"},{"size":1006,"mtime":1607054861398,"results":"27","hashOfConfig":"19"},{"size":1065,"mtime":1606857940155,"results":"28","hashOfConfig":"19"},{"size":429,"mtime":1606643579167,"results":"29","hashOfConfig":"19"},{"size":357,"mtime":1607063315549,"results":"30","hashOfConfig":"19"},{"size":574,"mtime":1607059964277,"results":"31","hashOfConfig":"19"},{"size":1460,"mtime":1606933490981,"results":"32","hashOfConfig":"19"},{"size":192,"mtime":1606809354614,"results":"33","hashOfConfig":"19"},{"size":5393,"mtime":1607072678046,"results":"34","hashOfConfig":"19"},{"size":337,"mtime":1607061790817,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1m3d0vl",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"/Users/vladislavkirilov/Портфолио/tests/test-avito/src/index.js",["84"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n// HashRouter для gh pages\nimport { HashRouter, BrowserRouter } from 'react-router-dom'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport './index.scss'\nimport App from './App'\nimport store from './store'\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  <HashRouter basename={`/`}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n",["85","86"],"/Users/vladislavkirilov/Портфолио/tests/test-avito/src/App.js",[],["87","88"],"/Users/vladislavkirilov/Портфолио/tests/test-avito/src/api.js",[],"/Users/vladislavkirilov/Портфолио/tests/test-avito/src/slice/appSlice.js",[],["89","90"],"/Users/vladislavkirilov/Портфолио/tests/test-avito/src/store.js",[],["91","92"],"/Users/vladislavkirilov/Портфолио/tests/test-avito/src/slice/newsSlice.js",[],"/Users/vladislavkirilov/Портфолио/tests/test-avito/src/pages/NewsPage.jsx",["93","94"],"import React, { memo, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { compose } from 'redux'\nimport { Link } from 'react-router-dom'\n\nimport { Container, Alert, Button } from 'react-bootstrap'\n\nimport { clearNews } from '../slice/newsSlice'\nimport { NewsInfo } from '../components/NewsInfo/NewsInfo'\nimport { Comments } from '../components/Comments/Comments'\nimport { ButtonUpdate } from '../components/ButtonUpdate/ButtonUpdate'\nimport { Overlay } from '../components/Overlay/Overlay'\nimport { withUpdate } from '../hocs/withUpdate'\n\nconst NewsPage = ({\n  setAction,\n  setCallback,\n  data = {},\n  handleUpdate,\n  alertMessage = false,\n}) => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    setCallback(`getItem`)\n    setAction(`setActiveNews`)\n    dispatch(clearNews())\n  }, [])\n\n  return (\n    <Container>\n      {data.title ? (\n        <>\n          <Link to={`/`}>\n            <Button variant=\"outline-primary\">Back to news list</Button>\n          </Link>\n          <a href={`${data.url}`} target=\"_blank\">\n            <h3>{`${data.title}`}</h3>\n          </a>\n          <NewsInfo className={`mx-auto`} {...data} />\n          {alertMessage && (\n            <Alert variant={`primary`}>\n              there are no latest comments in the feed\n            </Alert>\n          )}\n          <Comments {...data}>\n            <ButtonUpdate handleUpdate={handleUpdate}>\n              update comments\n            </ButtonUpdate>\n          </Comments>\n        </>\n      ) : (\n        <Overlay />\n      )}\n    </Container>\n  )\n}\n\nexport default compose(withUpdate, memo)(NewsPage)\n","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/pages/HomePage.jsx",["95"],"import React, { memo, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { compose } from 'redux'\n\nimport { Container, ListGroup, Alert } from 'react-bootstrap'\nimport styled from 'styled-components'\n\nimport { clearNews } from '../slice/newsSlice'\nimport { NewsItem } from '../components/NewsItem/NewsItem'\nimport { ButtonUpdate } from '../components/ButtonUpdate/ButtonUpdate'\nimport { Overlay } from '../components/Overlay/Overlay'\nimport { withUpdate } from '../hocs/withUpdate'\n\nconst StyledContainer = styled(Container)`\n  @media (max-width: 480px) {\n    padding: 0;\n  }\n`\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  @media (max-width: 480px) {\n    padding: 0 10px;\n  }\n`\n\nconst HomePage = ({\n  setCallback,\n  data = [],\n  handleUpdate,\n  alertMessage,\n  touchStart,\n  touchEnd,\n}) => {\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setCallback(`getNewsIdList`)\n    return () => dispatch(clearNews())\n  }, [])\n\n  return (\n    <StyledContainer onTouchStart={touchStart} onTouchEnd={touchEnd}>\n      <Header>\n        <h2>Hacker News</h2>\n        <ButtonUpdate handleUpdate={handleUpdate}>update news</ButtonUpdate>\n      </Header>\n      {alertMessage && (\n        <Alert variant={`primary`}>there is no latest news in the feed</Alert>\n      )}\n      {loading && <Overlay />}\n      <ListGroup>\n        {data[0] &&\n          data.map((item) => (\n            <NewsItem\n              key={item}\n              loading={loading}\n              setLoading={setLoading}\n              id={item}\n            />\n          ))}\n      </ListGroup>\n    </StyledContainer>\n  )\n}\n\nexport default compose(withUpdate, memo)(HomePage)\n","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/utils/mapTime.js",[],"/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/NewsItem/NewsItem.jsx",["96","97"],"import React, { memo, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { ListGroup } from 'react-bootstrap'\n\nimport { getItem } from '../../slice/newsSlice'\nimport { NewsInfo } from '../NewsInfo/NewsInfo'\nimport styles from './NewsItem.module.scss'\n\nexport const NewsItem = memo(({ id, loading, setLoading }) => {\n  const dispatch = useDispatch()\n  const { newsIdList } = useSelector((state) => state.news)\n  const [itemInfo, setItemInfo] = useState({})\n\n  useEffect(() => {\n    dispatch(getItem(id, `setNewsItem`, setItemInfo))\n  }, [])\n\n  useEffect(() => {\n    if (itemInfo.title && newsIdList[newsIdList.length - 1] === id) {\n      setLoading(false)\n    }\n  }, [itemInfo])\n\n  return (\n    <>\n      {!loading && itemInfo.title && (\n        <ListGroup.Item key={id}>\n          <Link to={`/item/${id}`}>\n            <h3 className={styles.title}>{`${itemInfo.title}`}</h3>\n          </Link>\n          <NewsInfo {...itemInfo} />\n        </ListGroup.Item>\n      )}\n    </>\n  )\n})\n",["98","99"],"/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/Time/Time.jsx",["100"],"import React, { useEffect, useState } from 'react'\n\nimport { mapTime } from '../../utils/mapTime'\n\nexport const Time = ({ time, children }) => {\n  const [timeAgo, setTimeAgo] = useState(mapTime(time))\n\n  useEffect(() => {\n    const interval = setInterval(() => setTimeAgo(mapTime(time)), 1000 * 60)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <span>\n      {`${timeAgo}`}\n      {children}\n    </span>\n  )\n}\n","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/NewsInfo/NewsInfo.jsx",[],"/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/Comments/Comments.jsx",[],["101","102"],"/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/Comment/Comment.jsx",["103"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Card, Container, Button } from 'react-bootstrap'\n\nimport { getItem } from '../../slice/newsSlice'\nimport styles from './Comment.module.scss'\n\nexport const Comment = ({ id }) => {\n  const dispatch = useDispatch()\n  const [itemInfo, setItemInfo] = useState({})\n  const [showCommentsTree, setShowCommentsTree] = useState(false)\n\n  useEffect(() => {\n    dispatch(getItem(id, `setComment`, setItemInfo))\n  }, [])\n\n  const toggleShowInnerComments = () => {\n    setShowCommentsTree((prev) => !prev)\n  }\n\n  return (\n    <>\n      {itemInfo.text && (\n        <Card className={styles.card}>\n          <Container>\n            <Card.Title>{`${itemInfo.by}`}</Card.Title>\n            <Card.Body\n              className={styles.text}\n              dangerouslySetInnerHTML={{ __html: `${itemInfo.text}` }}\n            ></Card.Body>\n            {itemInfo.kids && (\n              <Button\n                onClick={toggleShowInnerComments}\n                className={styles.btn}\n                variant={!showCommentsTree ? `outline-dark` : `dark`}\n              >\n                {!showCommentsTree ? `Show more comments` : `Hide comments`}\n              </Button>\n            )}\n            {itemInfo.kids &&\n              showCommentsTree &&\n              itemInfo.kids.map((id) => <Comment id={id} key={id} />)}\n          </Container>\n        </Card>\n      )}\n    </>\n  )\n}\n","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/ButtonUpdate/ButtonUpdate.jsx",[],"/Users/vladislavkirilov/Портфолио/tests/test-avito/src/hocs/withUpdate.jsx",["104","105","106","107","108"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\n\nimport { getItem, getNewsIdList } from '../slice/newsSlice'\n\nexport const withUpdate = (Component) =>\n  withRouter((props) => {\n    const dispatch = useDispatch()\n    const { activeNews, newsIdList } = useSelector((state) => state.news)\n    const { itemId } = props.match.params\n\n    const [data, setData] = useState({})\n    const [update, setUpdate] = useState(true)\n    const [isHandleUpdate, setIsHandleUpdate] = useState(false)\n    const [alertMessage, setAlertMessage] = useState(null)\n\n    const [callback, setCallback] = useState(null)\n    const [action, setAction] = useState(null)\n\n    const thank = {\n      getNewsIdList: getNewsIdList,\n      getItem: getItem,\n    }\n\n    useEffect(() => {\n      if (update && callback) {\n        dispatch(thank[callback](itemId, action))\n        setUpdate(false)\n      }\n    }, [callback, update])\n\n    useEffect(() => {\n      const interval = setInterval(() => {\n        setUpdate(true)\n      }, 1000 * 60)\n      return () => clearInterval(interval)\n    }, [])\n\n    useEffect(() => {\n      if (activeNews.descendants !== data.descendants) {\n        setData(activeNews)\n        setAlertMessage(null)\n      } else if (isHandleUpdate) {\n        setAlertMessage(true)\n      }\n    }, [activeNews])\n\n    useEffect(() => {\n      if (newsIdList[0] !== data[0]) {\n        setData(newsIdList)\n        setAlertMessage(null)\n      } else if (isHandleUpdate) {\n        setAlertMessage(true)\n      }\n    }, [newsIdList])\n\n    useEffect(() => {\n      if (isHandleUpdate) {\n        const timeout = setTimeout(() => {\n          setAlertMessage(null)\n          setIsHandleUpdate(false)\n        }, 5000)\n        return () => clearTimeout(timeout)\n      }\n    }, [isHandleUpdate])\n\n    const handleUpdate = () => {\n      setIsHandleUpdate(true)\n      setUpdate(true)\n    }\n    // обновление по касанию для сенсорных\n\n    const [startTouch, setStartTouch] = useState(null)\n    const [endTouch, setEndTouch] = useState(null)\n    const [startPage, setStartPage] = useState(null)\n    const [endPage, setEndPage] = useState(null)\n\n    useEffect(() => {\n      if (startPage === 0 && endPage == 0 && endTouch - startTouch > 100) {\n        handleUpdate()\n      }\n    }, [endTouch])\n\n    const Handle = {\n      setStartTouch: (evt) => {\n        setStartTouch(evt.touches[0].clientY)\n        setStartPage(window.pageYOffset)\n      },\n      setEndTouch: (evt) => {\n        setEndTouch(evt.changedTouches[0].clientY)\n        setEndPage(window.pageYOffset)\n      },\n    }\n\n    return (\n      <Component\n        touchStart={(evt) => Handle.setStartTouch(evt)}\n        touchEnd={(evt) => Handle.setEndTouch(evt)}\n        setAction={setAction}\n        setCallback={setCallback}\n        data={data}\n        handleUpdate={handleUpdate}\n        alertMessage={alertMessage}\n        {...props}\n      />\n    )\n  })\n\n// import React, { useEffect, useState } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { withRouter } from 'react-router-dom'\n\n// import { getItem, getNewsIdList } from '../slice/newsSlice'\n\n// export const withUpdate = (Component) =>\n//   withRouter((props) => {\n//     const dispatch = useDispatch()\n//     const { activeNews, newsIdList } = useSelector((state) => state.news)\n//     const { itemId } = props.match.params\n\n//     const [data, setData] = useState({})\n//     const [update, setUpdate] = useState(true)\n//     const [isHandleUpdate, setIsHandleUpdate] = useState(false)\n//     const [alertMessage, setAlertMessage] = useState(null)\n\n//     const [callback, setCallback] = useState(null)\n//     const [action, setAction] = useState(null)\n\n//     const thank = {\n//       getNewsIdList: getNewsIdList,\n//       getItem: getItem,\n//     }\n\n//     useEffect(() => {\n//       if (update && callback) {\n//         dispatch(thank[callback](itemId, action))\n//         setUpdate(false)\n//       }\n//     }, [callback, update])\n\n//     useEffect(() => {\n//       const interval = setInterval(() => {\n//         setUpdate(true)\n//       }, 1000 * 60)\n//       return () => clearInterval(interval)\n//     }, [])\n\n//     useEffect(() => {\n//       if (activeNews.descendants !== data.descendants) {\n//         setData(activeNews)\n//         setAlertMessage(null)\n//       } else if (isHandleUpdate) {\n//         setAlertMessage(true)\n//       }\n//     }, [activeNews])\n\n//     useEffect(() => {\n//       if (newsIdList[0] !== data[0]) {\n//         setData(newsIdList)\n//         setAlertMessage(null)\n//       } else if (isHandleUpdate) {\n//         setAlertMessage(true)\n//       }\n//     }, [newsIdList])\n\n//     useEffect(() => {\n//       if (isHandleUpdate) {\n//         const timeout = setTimeout(() => {\n//           setAlertMessage(null)\n//           setIsHandleUpdate(false)\n//         }, 5000)\n//         return () => clearTimeout(timeout)\n//       }\n//     }, [isHandleUpdate])\n\n//     const handleUpdate = () => {\n//       setIsHandleUpdate(true)\n//       setUpdate(true)\n//     }\n\n//     return (\n//       <Component\n//         setAction={setAction}\n//         setCallback={setCallback}\n//         data={data}\n//         handleUpdate={handleUpdate}\n//         alertMessage={alertMessage}\n//         {...props}\n//       />\n//     )\n//   })\n","/Users/vladislavkirilov/Портфолио/tests/test-avito/src/components/Overlay/Overlay.jsx",[],["109","110"],{"ruleId":"111","severity":1,"message":"112","line":5,"column":22,"nodeType":"113","messageId":"114","endLine":5,"endColumn":35},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"115","replacedBy":"119"},{"ruleId":"117","replacedBy":"120"},{"ruleId":"115","replacedBy":"121"},{"ruleId":"117","replacedBy":"122"},{"ruleId":"115","replacedBy":"123"},{"ruleId":"117","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":27,"column":6,"nodeType":"127","endLine":27,"endColumn":8,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":36,"column":35,"nodeType":"131","endLine":36,"endColumn":50},{"ruleId":"125","severity":1,"message":"132","line":44,"column":6,"nodeType":"127","endLine":44,"endColumn":8,"suggestions":"133"},{"ruleId":"125","severity":1,"message":"134","line":17,"column":6,"nodeType":"127","endLine":17,"endColumn":8,"suggestions":"135"},{"ruleId":"125","severity":1,"message":"136","line":23,"column":6,"nodeType":"127","endLine":23,"endColumn":16,"suggestions":"137"},{"ruleId":"115","replacedBy":"138"},{"ruleId":"117","replacedBy":"139"},{"ruleId":"125","severity":1,"message":"140","line":12,"column":6,"nodeType":"127","endLine":12,"endColumn":8,"suggestions":"141"},{"ruleId":"115","replacedBy":"142"},{"ruleId":"117","replacedBy":"143"},{"ruleId":"125","severity":1,"message":"134","line":15,"column":6,"nodeType":"127","endLine":15,"endColumn":8,"suggestions":"144"},{"ruleId":"125","severity":1,"message":"145","line":31,"column":8,"nodeType":"127","endLine":31,"endColumn":26,"suggestions":"146"},{"ruleId":"125","severity":1,"message":"147","line":47,"column":8,"nodeType":"127","endLine":47,"endColumn":20,"suggestions":"148"},{"ruleId":"125","severity":1,"message":"149","line":56,"column":8,"nodeType":"127","endLine":56,"endColumn":20,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":80,"column":38,"nodeType":"153","messageId":"154","endLine":80,"endColumn":40},{"ruleId":"125","severity":1,"message":"155","line":83,"column":8,"nodeType":"127","endLine":83,"endColumn":18,"suggestions":"156"},{"ruleId":"115","replacedBy":"157"},{"ruleId":"117","replacedBy":"158"},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["159"],"no-negated-in-lhs",["160"],["159"],["160"],["159"],["160"],["159"],["160"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'setAction', and 'setCallback'. Either include them or remove the dependency array. If 'setCallback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["161"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has missing dependencies: 'dispatch' and 'setCallback'. Either include them or remove the dependency array. If 'setCallback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["162"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["163"],"React Hook useEffect has missing dependencies: 'id', 'newsIdList', and 'setLoading'. Either include them or remove the dependency array. If 'setLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["164"],["159"],["160"],"React Hook useEffect has a missing dependency: 'time'. Either include it or remove the dependency array. If 'setTimeAgo' needs the current value of 'time', you can also switch to useReducer instead of useState and read 'time' in the reducer.",["165"],["159"],["160"],["166"],"React Hook useEffect has missing dependencies: 'action', 'dispatch', 'itemId', and 'thank'. Either include them or remove the dependency array.",["167"],"React Hook useEffect has missing dependencies: 'data.descendants' and 'isHandleUpdate'. Either include them or remove the dependency array.",["168"],"React Hook useEffect has missing dependencies: 'data' and 'isHandleUpdate'. Either include them or remove the dependency array.",["169"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'endPage', 'startPage', and 'startTouch'. Either include them or remove the dependency array.",["170"],["159"],["160"],"no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"175","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [dispatch, setAction, setCallback]",{"range":"190","text":"191"},"Update the dependencies array to be: [dispatch, setCallback]",{"range":"192","text":"193"},"Update the dependencies array to be: [dispatch, id]",{"range":"194","text":"195"},"Update the dependencies array to be: [id, itemInfo, newsIdList, setLoading]",{"range":"196","text":"197"},"Update the dependencies array to be: [time]",{"range":"198","text":"199"},{"range":"200","text":"195"},"Update the dependencies array to be: [action, callback, dispatch, itemId, thank, update]",{"range":"201","text":"202"},"Update the dependencies array to be: [activeNews, data.descendants, isHandleUpdate]",{"range":"203","text":"204"},"Update the dependencies array to be: [data, isHandleUpdate, newsIdList]",{"range":"205","text":"206"},"Update the dependencies array to be: [endPage, endTouch, startPage, startTouch]",{"range":"207","text":"208"},[814,816],"[dispatch, setAction, setCallback]",[1071,1073],"[dispatch, setCallback]",[622,624],"[dispatch, id]",[752,762],"[id, itemInfo, newsIdList, setLoading]",[346,348],"[time]",[506,508],[975,993],"[action, callback, dispatch, itemId, thank, update]",[1377,1389],"[activeNews, data.descendants, isHandleUpdate]",[1591,1603],"[data, isHandleUpdate, newsIdList]",[2340,2350],"[endPage, endTouch, startPage, startTouch]"]