{"version":3,"sources":["components/Comment/Comment.module.scss","components/Comments/Comments.module.scss","components/NewsInfo/NewsInfo.module.scss","components/NewsItem/NewsItem.module.scss","components/Overlay/Overlay.module.scss","slice/newsSlice.js","utils/mapTime.js","components/Time/Time.jsx","components/NewsInfo/NewsInfo.jsx","components/NewsItem/NewsItem.jsx","components/ButtonUpdate/ButtonUpdate.jsx","components/Overlay/Overlay.jsx","hocs/withUpdate.jsx","pages/HomePage.jsx","components/Comment/Comment.jsx","components/Comments/Comments.jsx","pages/NewsPage.jsx","App.js","slice/appSlice.js","store.js","api.js","index.js"],"names":["module","exports","slice","createSlice","name","initialState","newsIdList","news","activeNews","comments","reducers","setNewsIdList","state","action","payload","setNewsItem","sort","a","b","id","clearNews","setActiveNews","setComment","actions","getNewsIdList","dispatch","_","api","get","res","data","getItem","actionType","callback","deleted","mapTime","timestamp","seconds","Math","floor","Date","interval","Time","time","children","useState","timeAgo","setTimeAgo","useEffect","setInterval","clearInterval","NewsInfo","score","by","className","styles","newsInfo","NewsItem","memo","loading","setLoading","useDispatch","useSelector","itemInfo","setItemInfo","title","length","ListGroup","Item","to","ButtonUpdate","handleUpdate","Button","onClick","Overlay","overlay","Spinner","animation","role","withUpdate","Component","withRouter","props","itemId","match","params","setData","update","setUpdate","isHandleUpdate","setIsHandleUpdate","alertMessage","setAlertMessage","setCallback","setAction","thank","descendants","timeout","setTimeout","clearTimeout","startTouch","setStartTouch","endTouch","setEndTouch","startPage","setStartPage","endPage","setEndPage","Handle","evt","touches","clientY","window","pageYOffset","changedTouches","touchStart","touchEnd","StyledContainer","styled","Container","Header","header","compose","onTouchStart","onTouchEnd","Alert","variant","map","item","Comment","showCommentsTree","setShowCommentsTree","text","Card","card","Title","Body","dangerouslySetInnerHTML","__html","kids","prev","btn","Comments","container","counter","href","url","target","Main","main","App","path","exact","render","initialized","error","setInitialized","setError","axios","baseURL","credentials","origin","interceptors","response","use","err","statusText","createAPI","store","configureStore","reducer","app","appReducer","newsReducer","middleware","getDefaultMiddleware","thunk","extraArgument","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.89aef85b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Comment_card__B2R2M\",\"btn\":\"Comment_btn__1QWQt\",\"text\":\"Comment_text__1-ryg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Comments_container__2gEP4\",\"header\":\"Comments_header__lTxDu\",\"counter\":\"Comments_counter__AvQSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsInfo\":\"NewsInfo_newsInfo__10hh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"NewsItem_title__2B4D3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__3_p4L\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst PAGE_SIZE = 100\r\n\r\nconst initialState = {\r\n  newsIdList: [],\r\n  news: [],\r\n  activeNews: {},\r\n  comments: [],\r\n}\r\n\r\n\r\nconst slice = createSlice({\r\n  name: `news`,\r\n  initialState,\r\n  reducers: {\r\n    setNewsIdList(state, action) {\r\n      state.newsIdList = action.payload\r\n    },\r\n    setNewsItem(state, action) {\r\n      state.news = [...state.news, action.payload]\r\n      state.news.sort((a, b) => b.id - a.id)\r\n    },\r\n    clearNews(state) {\r\n      state.news = []\r\n    },\r\n    setActiveNews(state, action) {\r\n      state.activeNews = action.payload\r\n    },\r\n    setComment(state, action) {\r\n      state.comments = [...state.comments, action.payload]\r\n    },\r\n  }\r\n})\r\n\r\n\r\nexport const {\r\n  setNewsIdList,\r\n  setNewsItem,\r\n  clearNews,\r\n  setActiveNews,\r\n  setComment,\r\n} = slice.actions\r\n\r\n\r\nexport const getNewsIdList = () => async (dispatch, _, api) => {\r\n  const res = await api.get(`/newstories.json`)\r\n  dispatch(setNewsIdList(res.data.slice(0, PAGE_SIZE)))\r\n}\r\n\r\nexport const getItem = (id, actionType, callback) => async (dispatch, _, api) => {\r\n  const res = await api.get(`/item/${id}.json`)\r\n  if (res && res.data) {\r\n    if (res.data.deleted) {\r\n      return\r\n    }\r\n    dispatch(slice.actions[actionType](res.data))\r\n    callback && callback(res.data)\r\n  }\r\n}\r\n\r\n\r\nexport default slice.reducer\r\n\r\n","export const mapTime = (timestamp) => {\n    const seconds = Math.floor(((new Date() - timestamp * 1000) / 1000))\n\n    let interval = Math.floor(seconds / 31536000)\n\n    if (interval > 1) {\n        if (interval < 2) {\n            return `${interval} year`\n        }\n        return `${interval} years`\n    }\n    interval = Math.floor(seconds / 2592000)\n\n    if (interval > 1) {\n        if (interval < 2) {\n            return `${interval} month`\n        }\n        return `${interval} months`\n    }\n    interval = Math.floor(seconds / 86400)\n\n    if (interval > 1) {\n        if (interval < 2) {\n            return `${interval} day`\n        }\n        return `${interval} days`\n    }\n    interval = Math.floor(seconds / 3600)\n\n    if (interval > 1) {\n        if (interval < 2) {\n            return `${interval} hour`\n        }\n        return `${interval} hours`\n    }\n    interval = Math.floor(seconds / 60)\n\n\n    if (interval === 1) {\n        return `${interval} minute`\n    }\n    return `${interval} minutes`\n}","import React, { useEffect, useState } from 'react'\n\nimport { mapTime } from '../../utils/mapTime'\n\nexport const Time = ({ time, children }) => {\n  const [timeAgo, setTimeAgo] = useState(mapTime(time))\n\n  useEffect(() => {\n    const interval = setInterval(() => setTimeAgo(mapTime(time)), 1000 * 60)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <span>\n      {`${timeAgo}`}\n      {children}\n    </span>\n  )\n}\n","import React from 'react'\n\nimport styles from './NewsInfo.module.scss'\nimport { Time } from '../Time/Time'\n\nexport const NewsInfo = ({ score, by, time }) => {\n  return (\n    <p className={styles.newsInfo}>\n      <span>{`${score} ${score === 1 ? `point` : `points`}`}</span>\n      <span>{`by ${by}`}</span>\n      <Time time={time}> ago</Time>\n    </p>\n  )\n}\n","import React, { memo, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { ListGroup } from 'react-bootstrap'\n\nimport { getItem } from '../../slice/newsSlice'\nimport { NewsInfo } from '../NewsInfo/NewsInfo'\nimport styles from './NewsItem.module.scss'\n\nexport const NewsItem = memo(({ id, loading, setLoading }) => {\n  const dispatch = useDispatch()\n  const { newsIdList } = useSelector((state) => state.news)\n  const [itemInfo, setItemInfo] = useState({})\n\n  useEffect(() => {\n    dispatch(getItem(id, `setNewsItem`, setItemInfo))\n  }, [])\n\n  useEffect(() => {\n    if (itemInfo.title && newsIdList[newsIdList.length - 1] === id) {\n      setLoading(false)\n    }\n  }, [itemInfo])\n\n  return (\n    <>\n      {!loading && itemInfo.title && (\n        <ListGroup.Item key={id}>\n          <Link to={`/item/${id}`}>\n            <h3 className={styles.title}>{`${itemInfo.title}`}</h3>\n          </Link>\n          <NewsInfo {...itemInfo} />\n        </ListGroup.Item>\n      )}\n    </>\n  )\n})\n","import React from 'react'\nimport { Button } from 'react-bootstrap'\n\nexport const ButtonUpdate = ({ handleUpdate, children }) => {\n  return <Button onClick={handleUpdate}>{children}</Button>\n}\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nimport styles from './Overlay.module.scss'\n\nexport const Overlay = () => {\n  return (\n    <section className={styles.overlay}>\n      <Spinner animation=\"border\" role=\"status\">\n        <span className={`sr-only`}>Loading...</span>\n      </Spinner>\n    </section>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\n\nimport { getItem, getNewsIdList } from '../slice/newsSlice'\n\nexport const withUpdate = (Component) =>\n  withRouter((props) => {\n    const dispatch = useDispatch()\n    const { activeNews, newsIdList } = useSelector((state) => state.news)\n    const { itemId } = props.match.params\n\n    const [data, setData] = useState({})\n    const [update, setUpdate] = useState(true)\n    const [isHandleUpdate, setIsHandleUpdate] = useState(false)\n    const [alertMessage, setAlertMessage] = useState(null)\n\n    const [callback, setCallback] = useState(null)\n    const [action, setAction] = useState(null)\n\n    const thank = {\n      getNewsIdList: getNewsIdList,\n      getItem: getItem,\n    }\n\n    useEffect(() => {\n      if (update && callback) {\n        dispatch(thank[callback](itemId, action))\n        setUpdate(false)\n      }\n    }, [callback, update])\n\n    useEffect(() => {\n      const interval = setInterval(() => {\n        setUpdate(true)\n      }, 1000 * 60)\n      return () => clearInterval(interval)\n    }, [])\n\n    useEffect(() => {\n      if (activeNews.descendants !== data.descendants) {\n        setData(activeNews)\n        setAlertMessage(null)\n      } else if (isHandleUpdate) {\n        setAlertMessage(true)\n      }\n    }, [activeNews])\n\n    useEffect(() => {\n      if (newsIdList[0] !== data[0]) {\n        setData(newsIdList)\n        setAlertMessage(null)\n      } else if (isHandleUpdate) {\n        setAlertMessage(true)\n      }\n    }, [newsIdList])\n\n    useEffect(() => {\n      if (isHandleUpdate) {\n        const timeout = setTimeout(() => {\n          setAlertMessage(null)\n          setIsHandleUpdate(false)\n        }, 5000)\n        return () => clearTimeout(timeout)\n      }\n    }, [isHandleUpdate])\n\n    const handleUpdate = () => {\n      setIsHandleUpdate(true)\n      setUpdate(true)\n    }\n    // обновление по касанию для сенсорных\n\n    const [startTouch, setStartTouch] = useState(null)\n    const [endTouch, setEndTouch] = useState(null)\n    const [startPage, setStartPage] = useState(null)\n    const [endPage, setEndPage] = useState(null)\n\n    useEffect(() => {\n      if (startPage === 0 && endPage == 0 && endTouch - startTouch > 100) {\n        handleUpdate()\n      }\n    }, [endTouch])\n\n    const Handle = {\n      setStartTouch: (evt) => {\n        setStartTouch(evt.touches[0].clientY)\n        setStartPage(window.pageYOffset)\n      },\n      setEndTouch: (evt) => {\n        setEndTouch(evt.changedTouches[0].clientY)\n        setEndPage(window.pageYOffset)\n      },\n    }\n\n    return (\n      <Component\n        touchStart={(evt) => Handle.setStartTouch(evt)}\n        touchEnd={(evt) => Handle.setEndTouch(evt)}\n        setAction={setAction}\n        setCallback={setCallback}\n        data={data}\n        handleUpdate={handleUpdate}\n        alertMessage={alertMessage}\n        {...props}\n      />\n    )\n  })\n\n// import React, { useEffect, useState } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { withRouter } from 'react-router-dom'\n\n// import { getItem, getNewsIdList } from '../slice/newsSlice'\n\n// export const withUpdate = (Component) =>\n//   withRouter((props) => {\n//     const dispatch = useDispatch()\n//     const { activeNews, newsIdList } = useSelector((state) => state.news)\n//     const { itemId } = props.match.params\n\n//     const [data, setData] = useState({})\n//     const [update, setUpdate] = useState(true)\n//     const [isHandleUpdate, setIsHandleUpdate] = useState(false)\n//     const [alertMessage, setAlertMessage] = useState(null)\n\n//     const [callback, setCallback] = useState(null)\n//     const [action, setAction] = useState(null)\n\n//     const thank = {\n//       getNewsIdList: getNewsIdList,\n//       getItem: getItem,\n//     }\n\n//     useEffect(() => {\n//       if (update && callback) {\n//         dispatch(thank[callback](itemId, action))\n//         setUpdate(false)\n//       }\n//     }, [callback, update])\n\n//     useEffect(() => {\n//       const interval = setInterval(() => {\n//         setUpdate(true)\n//       }, 1000 * 60)\n//       return () => clearInterval(interval)\n//     }, [])\n\n//     useEffect(() => {\n//       if (activeNews.descendants !== data.descendants) {\n//         setData(activeNews)\n//         setAlertMessage(null)\n//       } else if (isHandleUpdate) {\n//         setAlertMessage(true)\n//       }\n//     }, [activeNews])\n\n//     useEffect(() => {\n//       if (newsIdList[0] !== data[0]) {\n//         setData(newsIdList)\n//         setAlertMessage(null)\n//       } else if (isHandleUpdate) {\n//         setAlertMessage(true)\n//       }\n//     }, [newsIdList])\n\n//     useEffect(() => {\n//       if (isHandleUpdate) {\n//         const timeout = setTimeout(() => {\n//           setAlertMessage(null)\n//           setIsHandleUpdate(false)\n//         }, 5000)\n//         return () => clearTimeout(timeout)\n//       }\n//     }, [isHandleUpdate])\n\n//     const handleUpdate = () => {\n//       setIsHandleUpdate(true)\n//       setUpdate(true)\n//     }\n\n//     return (\n//       <Component\n//         setAction={setAction}\n//         setCallback={setCallback}\n//         data={data}\n//         handleUpdate={handleUpdate}\n//         alertMessage={alertMessage}\n//         {...props}\n//       />\n//     )\n//   })\n","import React, { memo, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { compose } from 'redux'\n\nimport { Container, ListGroup, Alert } from 'react-bootstrap'\nimport styled from 'styled-components'\n\nimport { clearNews } from '../slice/newsSlice'\nimport { NewsItem } from '../components/NewsItem/NewsItem'\nimport { ButtonUpdate } from '../components/ButtonUpdate/ButtonUpdate'\nimport { Overlay } from '../components/Overlay/Overlay'\nimport { withUpdate } from '../hocs/withUpdate'\n\nconst StyledContainer = styled(Container)`\n  @media (max-width: 480px) {\n    padding: 0;\n  }\n`\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  @media (max-width: 480px) {\n    padding: 0 10px;\n  }\n`\n\nconst HomePage = ({\n  setCallback,\n  data = [],\n  handleUpdate,\n  alertMessage,\n  touchStart,\n  touchEnd,\n}) => {\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setCallback(`getNewsIdList`)\n    return () => dispatch(clearNews())\n  }, [])\n\n  return (\n    <StyledContainer onTouchStart={touchStart} onTouchEnd={touchEnd}>\n      <Header>\n        <h2>Hacker News</h2>\n        <ButtonUpdate handleUpdate={handleUpdate}>update news</ButtonUpdate>\n      </Header>\n      {alertMessage && (\n        <Alert variant={`primary`}>there is no latest news in the feed</Alert>\n      )}\n      {loading && <Overlay />}\n      <ListGroup>\n        {data[0] &&\n          data.map((item) => (\n            <NewsItem\n              key={item}\n              loading={loading}\n              setLoading={setLoading}\n              id={item}\n            />\n          ))}\n      </ListGroup>\n    </StyledContainer>\n  )\n}\n\nexport default compose(withUpdate, memo)(HomePage)\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Card, Container, Button } from 'react-bootstrap'\n\nimport { getItem } from '../../slice/newsSlice'\nimport styles from './Comment.module.scss'\n\nexport const Comment = ({ id }) => {\n  const dispatch = useDispatch()\n  const [itemInfo, setItemInfo] = useState({})\n  const [showCommentsTree, setShowCommentsTree] = useState(false)\n\n  useEffect(() => {\n    dispatch(getItem(id, `setComment`, setItemInfo))\n  }, [])\n\n  const toggleShowInnerComments = () => {\n    setShowCommentsTree((prev) => !prev)\n  }\n\n  return (\n    <>\n      {itemInfo.text && (\n        <Card className={styles.card}>\n          <Container>\n            <Card.Title>{`${itemInfo.by}`}</Card.Title>\n            <Card.Body\n              className={styles.text}\n              dangerouslySetInnerHTML={{ __html: `${itemInfo.text}` }}\n            ></Card.Body>\n            {itemInfo.kids && (\n              <Button\n                onClick={toggleShowInnerComments}\n                className={styles.btn}\n                variant={!showCommentsTree ? `outline-dark` : `dark`}\n              >\n                {!showCommentsTree ? `Show more comments` : `Hide comments`}\n              </Button>\n            )}\n            {itemInfo.kids &&\n              showCommentsTree &&\n              itemInfo.kids.map((id) => <Comment id={id} key={id} />)}\n          </Container>\n        </Card>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { Container } from 'react-bootstrap'\n\nimport { Comment } from '../Comment/Comment'\nimport styles from './Comments.module.scss'\n\nexport const Comments = ({ kids = [], descendants, children }) => {\n  return (\n    <section>\n      <Container className={styles.container}>\n        <h4 className={styles.header}>\n          Comments\n          <span className={styles.counter}>{`${descendants}`}</span>\n        </h4>\n        {children}\n      </Container>\n      {kids.map((id) => (\n        <Comment id={id} key={id} />\n      ))}\n    </section>\n  )\n}\n","import React, { memo, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { compose } from 'redux'\nimport { Link } from 'react-router-dom'\n\nimport { Container, Alert, Button } from 'react-bootstrap'\n\nimport { clearNews } from '../slice/newsSlice'\nimport { NewsInfo } from '../components/NewsInfo/NewsInfo'\nimport { Comments } from '../components/Comments/Comments'\nimport { ButtonUpdate } from '../components/ButtonUpdate/ButtonUpdate'\nimport { Overlay } from '../components/Overlay/Overlay'\nimport { withUpdate } from '../hocs/withUpdate'\n\nconst NewsPage = ({\n  setAction,\n  setCallback,\n  data = {},\n  handleUpdate,\n  alertMessage = false,\n}) => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    setCallback(`getItem`)\n    setAction(`setActiveNews`)\n    dispatch(clearNews())\n  }, [])\n\n  return (\n    <Container>\n      {data.title ? (\n        <>\n          <Link to={`/`}>\n            <Button variant=\"outline-primary\">Back to news list</Button>\n          </Link>\n          <a href={`${data.url}`} target=\"_blank\">\n            <h3>{`${data.title}`}</h3>\n          </a>\n          <NewsInfo className={`mx-auto`} {...data} />\n          {alertMessage && (\n            <Alert variant={`primary`}>\n              there are no latest comments in the feed\n            </Alert>\n          )}\n          <Comments {...data}>\n            <ButtonUpdate handleUpdate={handleUpdate}>\n              update comments\n            </ButtonUpdate>\n          </Comments>\n        </>\n      ) : (\n        <Overlay />\n      )}\n    </Container>\n  )\n}\n\nexport default compose(withUpdate, memo)(NewsPage)\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport HomePage from './pages/HomePage'\nimport NewsPage from './pages/NewsPage'\n\n\nconst Main = styled.main`\n  padding: 10px 0;\n`\n\nconst App = () => {\n  return (\n    <Main>\n      <Switch>\n        <Route path={`/`} exact render={() => <HomePage />}></Route>\n        <Route path={`/item/:itemId`} exact render={() => <NewsPage />}></Route>\n      </Switch>\n    </Main >\n  )\n}\n\n\nexport default App","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst initialState = {\r\n  initialized: false,\r\n  error: null,\r\n}\r\n\r\n\r\nconst slice = createSlice({\r\n  name: `app`,\r\n  initialState,\r\n  reducers: {\r\n    setInitialized(state, action) {\r\n      state.initialized = action.payload\r\n    },\r\n    setError(state, action) {\r\n      state.error = action.payload\r\n    },\r\n  }\r\n})\r\n\r\n\r\nexport const {\r\n  setInitialized,\r\n  setError,\r\n} = slice.actions\r\n\r\nexport default slice.reducer\r\n\r\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport appReducer from './slice/appSlice'\r\nimport newsReducer from './slice/newsSlice'\r\nimport createAPI from './api'\r\n\r\n\r\nconst api = createAPI((...args) => store.dispatch(...args))\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n    news: newsReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => (\r\n    getDefaultMiddleware({\r\n      thunk: {\r\n        extraArgument: api,\r\n      },\r\n      // serializableCheck: false,\r\n    })\r\n  )\r\n})\r\n\r\n\r\nexport default store","import * as axios from 'axios'\r\n\r\nimport { setError } from './slice/appSlice'\r\n\r\n\r\nconst createAPI = (dispatch) => {\r\n  const api = axios.create({\r\n    baseURL: `https://hacker-news.firebaseio.com/v0/`,\r\n    credentials: true,\r\n    origin: 'http://localhost:3000',\r\n  })\r\n\r\n  const onSuccess = (response) => response\r\n\r\n  const onFail = (err) => {\r\n    dispatch(setError(err.statusText))\r\n    // throw new Error(err.statusText)\r\n  }\r\n\r\n  api.interceptors.response.use(onSuccess, onFail)\r\n\r\n  return api\r\n}\r\n\r\n\r\nexport default createAPI","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n// HashRouter для gh pages\nimport { HashRouter, BrowserRouter } from 'react-router-dom'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport './index.scss'\nimport App from './App'\nimport store from './store'\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  <HashRouter basename={`/`}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}